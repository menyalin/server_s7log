type User {
  _id: ID
  email: String! @unique
  name: String! @unique
  password: String!
  avatar: String
  joinDate: String
  favorites: [Post]
  roles: [String]
}
type Post {
  _id: ID
  title: String
  imageUrl: String
  categories: [String]
  description: String
  createDate: String
  likes: Int
  createdBy: User
  messages: [Message]
}
type Message {
  _id: ID
  messageBody: String
  messageDate: String
  messageUser: User
}
type Token {
  token: String!
}
type ActiveUsers {
  socketId: String
  user: User
  status: String
}

type Query {
  getCurrentUser: User
  getPosts: [Post]
  getMessages: [ChatMessage]
  getActiveUsers: [ActiveUsers]
}

type Mutation {
  addPost(
    title: String
    imageUrl: String
    categories: [String]
    description: String
    creatorId: ID!
  ): Post
  signupUser(
    name: String
    email: String
    password: String
    roles: [String]
  ): User
  signinUser(email: String!, password: String!): Token!
  sendChatMessage(text: String): ChatMessage
}

type Subscription {
  postAdded: Post
  chatMessageAdded: ChatMessage
  changeActiveUsers: [ActiveUsers]
}
type ChatMessage {
  _id: ID
  author: User
  text: String
  createDate: String
}
